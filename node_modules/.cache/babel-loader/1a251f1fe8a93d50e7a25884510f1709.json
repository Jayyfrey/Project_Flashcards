{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmedi\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"./../cards/HomePage\";\nimport Study from \"./../cards/Study\";\nimport ViewDeck from \"./../cards/ViewDeck\";\nimport CreateDeck from \"./../cards/CreateDeck\";\nimport EditDeck from \"./../cards/EditDeck\";\nimport CreateCard from \"./../cards/CreateCard\";\nimport EditCard from \"./../cards/EditCard\";\nimport NoMatch from \"./../cards/NoMatch\";\nimport { listCards, listDecks } from \"./../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState();\n  const [formData, setFormData] = useState({});\n  const [pageRerenderTrigger, setPageRerenderTrigger] = useState();\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  useEffect(() => {\n    async function loadDecks() {\n      const getDecks = await listDecks();\n\n      if (Array.isArray(getDecks)) {\n        setDecks(getDecks);\n      } else if (Array.isArray(getDecks) === false) {\n        setDecks([getDecks]);\n      } else {\n        setDecks(getDecks);\n        getDecks.map(async deck => {\n          const getCards = await listCards(deck.id);\n          deck[\"cards\"] = getCards;\n        });\n      }\n    }\n\n    loadDecks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(HomePage, {\n          decks: decks,\n          pageRerenderTrigger: pageRerenderTrigger,\n          setPageRerenderTrigger: setPageRerenderTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId/study\",\n        children: /*#__PURE__*/_jsxDEV(Study, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/new/\",\n        children: /*#__PURE__*/_jsxDEV(CreateDeck, {\n          pageRerenderTrigger: pageRerenderTrigger,\n          setPageRerenderTrigger: setPageRerenderTrigger,\n          decks: decks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId/edit\",\n        children: /*#__PURE__*/_jsxDEV(EditDeck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId/cards/new\",\n        children: /*#__PURE__*/_jsxDEV(CreateCard, {\n          formData: formData,\n          setFormData: setFormData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId/cards/:cardId/edit\",\n        children: /*#__PURE__*/_jsxDEV(EditCard, {\n          formData: formData,\n          setFormData: setFormData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId\",\n        children: /*#__PURE__*/_jsxDEV(ViewDeck, {\n          pageRerenderTrigger: pageRerenderTrigger,\n          setPageRerenderTrigger: setPageRerenderTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"Li1EHV1urn7sZ/oJyhq3gnONiBs=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/jmedi/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","Route","Switch","Header","HomePage","Study","ViewDeck","CreateDeck","EditDeck","CreateCard","EditCard","NoMatch","listCards","listDecks","Layout","decks","setDecks","formData","setFormData","pageRerenderTrigger","setPageRerenderTrigger","handleChange","target","name","value","loadDecks","getDecks","Array","isArray","map","deck","getCards","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"./../cards/HomePage\";\nimport Study from \"./../cards/Study\";\nimport ViewDeck from \"./../cards/ViewDeck\";\nimport CreateDeck from \"./../cards/CreateDeck\";\nimport EditDeck from \"./../cards/EditDeck\";\nimport CreateCard from \"./../cards/CreateCard\";\nimport EditCard from \"./../cards/EditCard\";\nimport NoMatch from \"./../cards/NoMatch\";\nimport {listCards,listDecks} from \"./../utils/api/index.js\";\n\nfunction Layout() {\n\n  const [decks, setDecks] = useState();\n  const [formData, setFormData] = useState({});\n  const [pageRerenderTrigger,setPageRerenderTrigger] = useState();\n  const handleChange = ({target}) => {\n      setFormData({\n          ...formData,\n          [target.name]: target.value,\n      })\n  }\n\n  useEffect( () => {\n    async function loadDecks () {\n      const getDecks = await (listDecks())\n\n      if (Array.isArray(getDecks)) {\n        setDecks(getDecks);\n      } else if (Array.isArray(getDecks) === false) {\n        setDecks([getDecks]);\n      } else {\n        setDecks(getDecks);\n        getDecks.map( async (deck) => {\n          const getCards = await listCards(deck.id);\n          deck[\"cards\"] = getCards;\n        })\n      }}\n\n    loadDecks();\n\n  },[]) \n\n\n\n  return (\n    <div>\n    <Header />\n      <Switch>\n\n        <Route exact path=\"/\">\n          <HomePage decks={decks} pageRerenderTrigger={pageRerenderTrigger} setPageRerenderTrigger={setPageRerenderTrigger}/>\n        </Route>\n\n        <Route exact path=\"/decks/:deckId/study\"> \n          <Study/>\n        </Route>\n\n        <Route exact path=\"/decks/new/\">\n          <CreateDeck pageRerenderTrigger={pageRerenderTrigger} setPageRerenderTrigger={setPageRerenderTrigger} decks={decks}/>\n        </Route>\n\n        <Route exact path=\"/decks/:deckId/edit\">\n          <EditDeck/>\n        </Route>\n\n        <Route exact path=\"/decks/:deckId/cards/new\">\n          <CreateCard formData={formData} setFormData={setFormData} handleChange={handleChange}/>\n          </Route>\n\n        <Route exact path=\"/decks/:deckId/cards/:cardId/edit\">\n          <EditCard formData={formData} setFormData={setFormData} handleChange={handleChange}/>\n        </Route>\n\n        <Route exact path=\"/decks/:deckId\">\n          <ViewDeck pageRerenderTrigger={pageRerenderTrigger} setPageRerenderTrigger={setPageRerenderTrigger}/>\n        </Route>\n\n        <Route>\n          <NoMatch />\n        </Route>\n\n      </Switch>\n    </div>\n  )\n}\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}