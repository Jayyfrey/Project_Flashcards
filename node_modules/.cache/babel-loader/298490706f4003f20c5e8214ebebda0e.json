{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmedi\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\cards\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const history = useHistory();\n  const [currentCardNumber, setCurrentCardNumber] = useState(1);\n  const [cardFlipped, setCardFlipped] = useState(false);\n  const [currentDeck, setCurrentDeck] = useState(\"Not Fetched Yet\");\n  const [currentCards, setCurrentCards] = useState(\"Not Fetched Yet\");\n  const parameters = useParams();\n  const deckId = parameters.deckId;\n  useEffect(() => {\n    async function getCardsAndDeck() {\n      const fetchedDeck = await readDeck(deckId);\n      setCurrentDeck(fetchedDeck);\n      setCurrentCards(fetchedDeck.cards);\n    }\n\n    getCardsAndDeck();\n  }, [deckId]);\n\n  if (currentDeck === \"Not Fetched Yet\" || currentCards === \"Not Fetched Yet\") {\n    return \"Loading the data...\";\n  }\n\n  const currentDeckName = currentDeck.name;\n  const totalCardsNumber = currentCards.length;\n  const currentCard = currentCards[currentCardNumber - 1];\n\n  const flipButtonHanlder = event => {\n    setCardFlipped(true);\n  };\n\n  const nextButtonHandler = event => {\n    if (currentCardNumber < totalCardsNumber) {\n      setCardFlipped(false);\n      setCurrentCardNumber(currentCardNumber => currentCardNumber + 1);\n    }\n  };\n\n  const cancelButtonHandler = event => {\n    history.push(\"/\");\n  };\n\n  const restartButtonHandler = event => {\n    setCurrentCardNumber(1);\n    setCardFlipped(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container w-75\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \" Home \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"\",\n            children: [\" \", currentDeckName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Study: \", currentDeckName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), totalCardsNumber > 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border border-secondary rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Card \", currentCardNumber, \" of \", totalCardsNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), cardFlipped ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentCard.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentCard.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 63\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: flipButtonHanlder,\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#exampleModal\",\n        className: \"btn btn-secondary mb-2 mr-2\",\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), cardFlipped ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextButtonHandler,\n        className: \"btn btn-primary mb-2\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this) : null, currentCardNumber === totalCardsNumber ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"exampleModal\",\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalLabel\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                id: \"exampleModalLabel\",\n                children: \"Restart cards?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: \"Click \\\"Cancel\\\" to return to the home page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelButtonHandler,\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                \"data-dismiss\": \"modal\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: restartButtonHandler,\n                type: \"button\",\n                className: \"btn btn-primary\",\n                \"data-dismiss\": \"modal\",\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", totalCardsNumber, \" cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}/cards/new`,\n        className: \"btn btn-primary mr-2\",\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Study, \"Ae/m29borESbWV9J6zFh9ko9ssM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/jmedi/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/cards/Study.js"],"names":["React","useState","useEffect","useParams","useHistory","Link","readDeck","Study","history","currentCardNumber","setCurrentCardNumber","cardFlipped","setCardFlipped","currentDeck","setCurrentDeck","currentCards","setCurrentCards","parameters","deckId","getCardsAndDeck","fetchedDeck","cards","currentDeckName","name","totalCardsNumber","length","currentCard","flipButtonHanlder","event","nextButtonHandler","cancelButtonHandler","push","restartButtonHandler","back","front"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\n\r\nfunction Study() {\r\n\r\n    const history = useHistory();\r\n    const [currentCardNumber,setCurrentCardNumber] = useState(1);\r\n    const [cardFlipped,setCardFlipped] = useState(false);\r\n    const [currentDeck, setCurrentDeck] = useState(\"Not Fetched Yet\");\r\n    const [currentCards, setCurrentCards] = useState(\"Not Fetched Yet\");\r\n    const parameters = useParams();\r\n    const deckId = parameters.deckId;\r\n\r\n    useEffect(() => {\r\n        async function getCardsAndDeck () {\r\n            const fetchedDeck =  await readDeck(deckId);\r\n            setCurrentDeck(fetchedDeck);\r\n            setCurrentCards(fetchedDeck.cards);\r\n        }\r\n        getCardsAndDeck();\r\n    },[deckId])\r\n\r\n    if (currentDeck === \"Not Fetched Yet\" || currentCards === \"Not Fetched Yet\") {\r\n        return \"Loading the data...\"\r\n    }\r\n\r\n    const currentDeckName = currentDeck.name;\r\n    const totalCardsNumber = currentCards.length;\r\n    const currentCard = currentCards[currentCardNumber-1]\r\n\r\n    const flipButtonHanlder = (event) => {\r\n        setCardFlipped(true);\r\n    }\r\n\r\n    const nextButtonHandler = (event) => {\r\n        if (currentCardNumber < totalCardsNumber) {\r\n            setCardFlipped(false);\r\n            setCurrentCardNumber((currentCardNumber) => currentCardNumber + 1);\r\n        }\r\n    }\r\n\r\n    const cancelButtonHandler = (event) => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const restartButtonHandler = (event) => {\r\n        setCurrentCardNumber(1);\r\n        setCardFlipped(false);\r\n    }\r\n\r\n    return (\r\n        <div className = \"container w-75\">\r\n            <nav aria-label = \"breadcrumb\">\r\n                <ol className = \"breadcrumb\">\r\n                    <li className = \"breadcrumb-item active\"> \r\n                        <Link to = \"/\"> Home </Link> \r\n                    </li>\r\n                    <li className = \"breadcrumb-item active\"> \r\n                        <Link to = \"\"> {currentDeckName} </Link> \r\n                    </li>\r\n                    <li className = \"breadcrumb-item\"> \r\n                        Study \r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Study: {currentDeckName}</h1>\r\n            \r\n            {(totalCardsNumber > 2) ? (\r\n            <div className = \"container border border-secondary rounded\">\r\n                <h5>Card {currentCardNumber} of {totalCardsNumber}</h5>\r\n                {/*Show front if the card is not flipped, else show back*/}\r\n                {cardFlipped ? (<p>{currentCard.back}</p>) : (<p>{currentCard.front}</p>)}\r\n                <button \r\n                    onClick = {flipButtonHanlder} \r\n                    data-toggle=\"modal\" \r\n                    data-target=\"#exampleModal\" \r\n                    className = \"btn btn-secondary mb-2 mr-2\">\r\n                    Flip\r\n                </button>\r\n                {/*Show the \"Next\" button if card is flipped*/}\r\n                {cardFlipped ? (<button onClick = {nextButtonHandler} className = \"btn btn-primary mb-2\">Next</button>) : null}\r\n                {/*Show modal if the user flipped the last card*/}\r\n                {currentCardNumber === totalCardsNumber ?\r\n                    (\r\n                        <div className=\"modal\" \r\n                            id=\"exampleModal\" \r\n                            tabIndex=\"-1\" \r\n                            role=\"dialog\" \r\n                            aria-labelledby=\"exampleModalLabel\" \r\n                            aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" \r\n                            role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" \r\n                                    id=\"exampleModalLabel\">\r\n                                    Restart cards?\r\n                                </h5>\r\n                                <button type=\"button\" \r\n                                        className=\"close\" \r\n                                        data-dismiss=\"modal\" \r\n                                        aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                Click \"Cancel\" to return to the home page\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button onClick = {cancelButtonHandler} \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-secondary\" \r\n                                        data-dismiss=\"modal\">\r\n                                        Cancel\r\n                                </button>\r\n                                <button onClick = {restartButtonHandler} \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-primary\" \r\n                                        data-dismiss=\"modal\">\r\n                                        OK\r\n                                </button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n            ) : (\r\n                <div>\r\n                    <h3>Not enough cards.</h3>\r\n                    <p>You need at least 3 cards to study. There are {totalCardsNumber} cards in this deck.</p>\r\n                    <Link   to = {`/decks/${deckId}/cards/new`}\r\n                            className = \"btn btn-primary mr-2\">\r\n                            Add Cards\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}