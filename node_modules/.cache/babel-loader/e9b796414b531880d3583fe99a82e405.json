{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmedi\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\cards\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"./../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const [currentDeck, setCurrentDeck] = useState(\"Not Fetched Yet\");\n  const parameters = useParams();\n  const deckId = parameters.deckId;\n  const history = userHistory();\n  useEffect(() => {\n    async function getDeck() {\n      const fetchedDeck = await readDeck(deckId);\n      setCurrentDeck(fetchedDeck);\n      setFormData(fetchedDeck);\n    }\n\n    getDeck();\n  }, [deckId]);\n  const [formData, setFormData] = useState({});\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formData);\n    updateDeck(formData);\n    history.push(`/decks/${deckId}}`);\n  };\n\n  if (currentDeck === \"Not Fetched Yet\") {\n    return \"Content is loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container w-75\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \" Home \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: [\" \", currentDeck.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: \" Edit Deck \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-group\",\n          children: \" Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"name\",\n          type: \"text\",\n          name: \"name\",\n          onChange: handleChange,\n          value: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: \"form-group\",\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          type: \"text\",\n          name: \"description\",\n          onChange: handleChange,\n          value: formData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"IYADODl3OjyOINNL+UhuukN0ULA=\", false, function () {\n  return [useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/jmedi/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/cards/EditDeck.js"],"names":["React","useState","useEffect","useParams","Link","useHistory","readDeck","updateDeck","EditDeck","currentDeck","setCurrentDeck","parameters","deckId","history","userHistory","getDeck","fetchedDeck","setFormData","formData","handleChange","target","name","value","handleSubmit","event","preventDefault","console","log","push","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"./../utils/api/index.js\";\r\n\r\nfunction EditDeck() {\r\n    const [currentDeck, setCurrentDeck] = useState(\"Not Fetched Yet\");\r\n    const parameters = useParams();\r\n    const deckId = parameters.deckId;\r\n    const history = userHistory();\r\n\r\n    useEffect(() => {\r\n        async function getDeck () {\r\n            const fetchedDeck =  await readDeck(deckId);\r\n            setCurrentDeck(fetchedDeck);\r\n            setFormData(fetchedDeck)\r\n        }\r\n        getDeck();\r\n    },[deckId])\r\n\r\n    const [formData, setFormData] = useState ({})\r\n    \r\n    const handleChange = ({target}) => {\r\n        setFormData({\r\n            ...formData,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(formData)\r\n        updateDeck(formData);\r\n        history.push(`/decks/${deckId}}`)\r\n    }\r\n    \r\n\r\n    if (currentDeck === \"Not Fetched Yet\") {\r\n        return \"Content is loading...\"\r\n    }\r\n\r\n    return (\r\n        <div className = \"container w-75\">\r\n            <div>\r\n                <nav aria-label = \"breadcrumb\">\r\n                    <ol className = \"breadcrumb\">\r\n                        <li className = \"breadcrumb-item active\"> <Link to = \"/\"> Home </Link> </li>\r\n                        <li className = \"breadcrumb-item active\"> <Link to = {`/decks/${deckId}`}> {currentDeck.name} </Link> </li>\r\n                        <li className = \"breadcrumb-item\"> Edit Deck </li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <h1>Edit Deck</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\" className = \"form-group\"> Name </label>\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            value={formData.name}\r\n                            />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\" className = \"form-group\"> Description </label>\r\n                        <textarea\r\n                            className = \"form-control\"\r\n                            id=\"description\"\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            onChange={handleChange}\r\n                            value={formData.description}\r\n                            /> \r\n                </div>\r\n                <Link to = {`/decks/${deckId}`} type = \"button\" className = \"btn btn-secondary mr-2\"> Cancel </Link>\r\n                <button type=\"submit\" className = \"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDeck;"]},"metadata":{},"sourceType":"module"}